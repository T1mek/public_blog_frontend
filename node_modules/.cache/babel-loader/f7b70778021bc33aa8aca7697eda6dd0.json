{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from \"../../axois\";\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\n  const {\n    data\n  } = await axios.get('/posts');\n  return data;\n});\nconst initialState = {\n  posts: {\n    item: [],\n    status: 'loading'\n  },\n  tags: {\n    items: [],\n    status: 'loading'\n  }\n};\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducer: {},\n  extraReducer: {\n    [fetchPosts.pending]: state => {\n      state.posts.status = 'loading';\n      state.posts.items = [];\n    },\n    [fetchPosts.fulfilled]: (state, action) => {\n      state.posts.item = action.payload;\n      state.posts.status = 'loaded';\n    },\n    [fetchPosts.rejected]: state => {\n      state.posts.status = 'error';\n      state.posts.items = [];\n    }\n  }\n});\nexport const postsReducer = postsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchPosts","data","get","initialState","posts","item","status","tags","items","postsSlice","name","reducer","extraReducer","pending","state","fulfilled","action","payload","rejected","postsReducer"],"sources":["/Users/t1mw/WebstormProjects/public_blog_frontend/src/redux/slice/PostsSlice.js"],"sourcesContent":["import {createSlice, createAsyncThunk} from '@reduxjs/toolkit'\nimport axios from \"../../axois\";\n\n\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\n    const {data} = await axios.get('/posts')\n    return data\n})\n\n\nconst initialState = {\n    posts: {\n        item: [],\n        status: 'loading'\n    },\n    tags: {\n        items: [],\n        status: 'loading'\n    },\n}\n\n\nconst postsSlice = createSlice({\n    name: 'posts',\n    initialState,\n    reducer: {},\n    extraReducer: {\n\n        [fetchPosts.pending]: (state) => {\n            state.posts.status = 'loading'\n            state.posts.items = []\n        },\n        [fetchPosts.fulfilled]: (state, action) => {\n            state.posts.item = action.payload\n            state.posts.status = 'loaded'\n        },\n        [fetchPosts.rejected]: (state) => {\n            state.posts.status = 'error'\n            state.posts.items = []\n        },\n    },\n\n})\n\nexport const postsReducer = postsSlice.reducer"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,gBAArB,QAA4C,kBAA5C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAGA,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,kBAAD,EAAqB,YAAY;EACvE,MAAM;IAACG;EAAD,IAAS,MAAMF,KAAK,CAACG,GAAN,CAAU,QAAV,CAArB;EACA,OAAOD,IAAP;AACH,CAHyC,CAAnC;AAMP,MAAME,YAAY,GAAG;EACjBC,KAAK,EAAE;IACHC,IAAI,EAAE,EADH;IAEHC,MAAM,EAAE;EAFL,CADU;EAKjBC,IAAI,EAAE;IACFC,KAAK,EAAE,EADL;IAEFF,MAAM,EAAE;EAFN;AALW,CAArB;AAYA,MAAMG,UAAU,GAAGZ,WAAW,CAAC;EAC3Ba,IAAI,EAAE,OADqB;EAE3BP,YAF2B;EAG3BQ,OAAO,EAAE,EAHkB;EAI3BC,YAAY,EAAE;IAEV,CAACZ,UAAU,CAACa,OAAZ,GAAuBC,KAAD,IAAW;MAC7BA,KAAK,CAACV,KAAN,CAAYE,MAAZ,GAAqB,SAArB;MACAQ,KAAK,CAACV,KAAN,CAAYI,KAAZ,GAAoB,EAApB;IACH,CALS;IAMV,CAACR,UAAU,CAACe,SAAZ,GAAwB,CAACD,KAAD,EAAQE,MAAR,KAAmB;MACvCF,KAAK,CAACV,KAAN,CAAYC,IAAZ,GAAmBW,MAAM,CAACC,OAA1B;MACAH,KAAK,CAACV,KAAN,CAAYE,MAAZ,GAAqB,QAArB;IACH,CATS;IAUV,CAACN,UAAU,CAACkB,QAAZ,GAAwBJ,KAAD,IAAW;MAC9BA,KAAK,CAACV,KAAN,CAAYE,MAAZ,GAAqB,OAArB;MACAQ,KAAK,CAACV,KAAN,CAAYI,KAAZ,GAAoB,EAApB;IACH;EAbS;AAJa,CAAD,CAA9B;AAsBA,OAAO,MAAMW,YAAY,GAAGV,UAAU,CAACE,OAAhC"},"metadata":{},"sourceType":"module"}